(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{484:function(a,t,s){"use strict";s.r(t);var r=s(2),_=Object(r.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"笔记一-前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#笔记一-前言"}},[a._v("#")]),a._v(" 笔记一：前言")]),a._v(" "),t("p",[a._v("这是写在最前面的话，此系列是本人报的一个AI培训班里面的Python课程，我认为确实讲的不错。")]),a._v(" "),t("p",[a._v("本系列中都是提炼的相关精华，课程中一共81讲，分为Python的基础知识和高级应用，还有介绍numpy、matplotlib和Pandas三个常见包的学习")]),a._v(" "),t("p",[a._v("在我总结的这系列中，也会基本按照他们的一个讲课历程来进行相关总结")]),a._v(" "),t("h2",{attrs:{id:"笔记二-初识编程-环境搭建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#笔记二-初识编程-环境搭建"}},[a._v("#")]),a._v(" 笔记二：初识编程&环境搭建")]),a._v(" "),t("h3",{attrs:{id:"一-初始编程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一-初始编程"}},[a._v("#")]),a._v(" 一，初始编程")]),a._v(" "),t("h4",{attrs:{id:"_1-1-为什么要学编程语言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-为什么要学编程语言"}},[a._v("#")]),a._v(" 1.1 为什么要学编程语言？")]),a._v(" "),t("p",[a._v("人和人交流可以通过文字、语言、动作等一套能够互相理解对方意思的表达来互相传达自己的意思，但是你要机器给你画个圆，总不能也是直接和它说“嘿，给我画个圆吧”，受计算机的构成影响，计算机只能够理")]),a._v(" "),t("p",[a._v("解由0和1构成的话的意思，那么就需要有一套实现人和机器之间交流的语言，也就是编程语言")]),a._v(" "),t("h4",{attrs:{id:"_1-2-什么是编程语言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-什么是编程语言"}},[a._v("#")]),a._v(" 1.2 什么是编程语言？")]),a._v(" "),t("p",[a._v("就如同上面说的，用来和计算机交流，控制计算机，并让计算机按照我们的要求去做事情的，这样的语言叫编程语言")]),a._v(" "),t("h4",{attrs:{id:"_1-3-编程语言的发展历程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-编程语言的发展历程"}},[a._v("#")]),a._v(" 1.3 编程语言的发展历程？")]),a._v(" "),t("p",[a._v("人类对一件事物的认知，总是从模仿到衍生创造的过程，对于编程语言，也是从计算机结构出发，大概能分为3个阶段：")]),a._v(" "),t("p",[a._v("1，机器语言：直接用机器能识别的机器指令去实现")]),a._v(" "),t("p",[a._v("2，汇编语言：从机器指令出发，做了一些集成替换，让控制机器更加简单。目前很多大学在介绍计算机结构的时候不可避免的会介绍一些汇编来介绍底层的一些操作")]),a._v(" "),t("p",[a._v("3，高级语言：人类的创造力是无穷的，受前两种语言的繁琐影响，由人类自然语言出发开发出了可用性更高的高级语言。不管是何种机型，只要配备上对应编译或解释程序就可以实现通用")]),a._v(" "),t("h4",{attrs:{id:"_1-4-编译型语言-解释型语言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-编译型语言-解释型语言"}},[a._v("#")]),a._v(" 1.4 编译型语言&解释型语言？")]),a._v(" "),t("p",[a._v("高级语言只是为了提高人类的可用性，最终实现和机器交互的时候，还是要变成机器能理解的机器指令，编译型语言&解释型语言两种的去接就是这种变化的方式不同，简单的理解就是：")]),a._v(" "),t("p",[a._v("编译型：先将人类输入的源代码文件变化成含机器语言的目标程序文件，再由机器执行此文件程序")]),a._v(" "),t("p",[a._v("解释型：不用先生成文件，可以实现逐句输入逐句翻译执行")]),a._v(" "),t("h3",{attrs:{id:"二-初识python"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二-初识python"}},[a._v("#")]),a._v(" 二，初识Python")]),a._v(" "),t("h4",{attrs:{id:"_2-1-python出现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-python出现"}},[a._v("#")]),a._v(" 2.1 Python出现")]),a._v(" "),t("p",[a._v("Python是龟叔（Guido van Roaaum）在1989的一个圣诞，在家闲着没事干出来的，别人过年没事干搞编程，我过年没事干搓麻将，唉，怪不得到现在还没赚到钱")]),a._v(" "),t("h4",{attrs:{id:"_2-2-python理解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-python理解"}},[a._v("#")]),a._v(" 2.2 Python理解")]),a._v(" "),t("p",[a._v("对于一个小白来说，怎么理解Python呢，其实就是一种上面提到的高级语言，现在世界上编程语言600多种，没必要全会，基本会一种其他大差不差，最起码基本的思路是差不多的，对于在大学期间学过C语言的很容易掌握，没有任何编程基础的也没关系，系统学完理解比较简单，知乎小作文里不知道看到多少没基础的文科生都轻松学会")]),a._v(" "),t("h3",{attrs:{id:"三-python环境搭建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三-python环境搭建"}},[a._v("#")]),a._v(" 三，Python环境搭建")]),a._v(" "),t("h4",{attrs:{id:"python安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#python安装"}},[a._v("#")]),a._v(" Python安装")]),a._v(" "),t("p",[a._v("Python安装老简单了，不用交钱，会下载安装就行")]),a._v(" "),t("p",[a._v("官网：https://www.python.org/")]),a._v(" "),t("p",[a._v("在官网中找对你电脑型号，软件版本自行选择，没要求的话可以下载最新版")]),a._v(" "),t("p",[a._v("当然，因为我报的课程是面向后续AI学习，老师让我们直接去下载anaconda，主要里面有包含180多个科学包及其依赖项")]),a._v(" "),t("p",[a._v("anaconda下载地址：")]),a._v(" "),t("p",[a._v("anaconda 官方下载地址："),t("a",{attrs:{href:"https://www.anaconda.com/products/individual",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://www.anaconda.com/products/individual"),t("OutboundLink")],1)]),a._v(" "),t("p",[a._v("anaconda 清华镜像下载地址（推荐）：https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/?C=M&O=D")]),a._v(" "),t("h4",{attrs:{id:"ide安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ide安装"}},[a._v("#")]),a._v(" IDE安装")]),a._v(" "),t("p",[a._v("直接安装Python后，就可以直接在终端去写Python程序，如下打开终端（仅说WIN系统，没钱搞别的，win+R，弹窗内输入CMD）")]),a._v(" "),t("p",[t("strong",[a._v("然后在这里输入python后就能开始执行python。譬如输入“import this”，再按回车，就能看到大家常说的Python之禅（Zen of Python）")])]),a._v(" "),t("p",[a._v("但是并不是很方便，比如像你要写很长很长的代码的时候，这时候我们就可以采用IDE（集成开发环境），小白可以理解成一个集成了和写代码相关的所有功能的软件。")]),a._v(" "),t("p",[a._v("主流Python用的IDE有：Vim、PyCharm、VSCode；")]),a._v(" "),t("p",[a._v("因为我个人还在学前端语言，所以就主要用VSCode了，官方下载地址："),t("a",{attrs:{href:"https://code.visualstudio.com/",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://code.visualstudio.com/"),t("OutboundLink")],1)]),a._v(" "),t("p",[a._v("因为wordpress的上传图片比较麻烦，我就不演示安装过程了，就是下载完VSCode后再在里面安装一下Python就行，然后还有一些VSCode的一些常用操作也准备后面有时间再看要不要整理一下，现在主要赶Python的进度")]),a._v(" "),t("h2",{attrs:{id:"笔记三-vscode相关操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#笔记三-vscode相关操作"}},[a._v("#")]),a._v(" 笔记三：VSCode相关操作")]),a._v(" "),t("p",[a._v("本篇主要介绍一些常见的VSCode操作，帮助提升效率")]),a._v(" "),t("h3",{attrs:{id:"_1-语法提示"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-语法提示"}},[a._v("#")]),a._v(" 1，语法提示")]),a._v(" "),t("h4",{attrs:{id:"_1-将鼠标光标放到函数上悬停-会出现这个函数的定义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-将鼠标光标放到函数上悬停-会出现这个函数的定义"}},[a._v("#")]),a._v(" （1）将鼠标光标放到函数上悬停，会出现这个函数的定义")]),a._v(" "),t("p",[a._v("如下图1、图2中，将鼠标光标悬停在print函数上，则会在下面悬停显示这个函数的定义，包括函数的作用，定义了哪些参数，各个参数的讲解等\n"),t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/28353153-c35c485f6e52b191.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"图1"}}),a._v(" "),t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/28353153-6e0fe68a18f7d53e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"图2"}})]),a._v(" "),t("h4",{attrs:{id:"_2-写词后会进行方法-参数名等的提示"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-写词后会进行方法-参数名等的提示"}},[a._v("#")]),a._v(" （2）写词后会进行方法，参数名等的提示")]),a._v(" "),t("p",[a._v("例如我想输入print这个函数，在输入p之后，会出现一个悬浮框，可以快速去选择以p开头的函数，在输入参数名时也一样会进行联想提示\n另外如图3中，我输入print函数里的end参数，会自动悬浮出这个end参数的定义\n"),t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/28353153-e0492ca192923d34.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"图3"}})]),a._v(" "),t("h3",{attrs:{id:"_2-报错提示"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-报错提示"}},[a._v("#")]),a._v(" 2，报错提示")]),a._v(" "),t("p",[a._v("当程序在执行的时候，发生了异常，即常说的出现了bug，即会出现报错")]),a._v(" "),t("h4",{attrs:{id:"_1-ide直接提示"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-ide直接提示"}},[a._v("#")]),a._v(" （1）IDE直接提示")]),a._v(" "),t("p",[a._v("常见一些错误，像本该用英文的括号，却用成了中文，那么就会像图4一样，出现红色波浪线和黄底的样式，告诉你这块用的有问题。类似的问题还有像缩进有明显的问题，该打冒号的没打等等，都会出现这种提示\n"),t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/28353153-05e5bbe1538d5207.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"图4"}})]),a._v(" "),t("h4",{attrs:{id:"_2-终端报错"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-终端报错"}},[a._v("#")]),a._v(" （2）终端报错")]),a._v(" "),t("p",[a._v("在对某个文件进行执行操作的时候，如果有问题，会在终端进行报错，如在图4中的问题在执行后会如图5一般提示。\n注意它的报错提示，看清楚报错的文件-报错的行-具体报错提示，然后再对应去修改就好了\n"),t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/28353153-6eabcfb2fe1a1587.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"图5"}})]),a._v(" "),t("h3",{attrs:{id:"_3-代码调试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-代码调试"}},[a._v("#")]),a._v(" 3，代码调试")]),a._v(" "),t("p",[a._v("想去具体看一下是怎么一步步执行，这过程各参数是怎么变化的及函数怎么执行的，一般是在看代码但是代码比较长或者是在出现bug进行排查时会用到")]),a._v(" "),t("h4",{attrs:{id:"_1-断点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-断点"}},[a._v("#")]),a._v(" （1）断点")]),a._v(" "),t("p",[a._v("既然说了要一步步执行，那么调试重点就是要让代码执行到我们需要的那一行，那么就涉及到断点，也就是说我设置了这个断点，就相当于告诉程序，我在下次执行的时候，只执行到这一行。\n设置方式就是，在需要的那一行前面点一下，让其出现一个红点即可，如下图6所示\n"),t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/28353153-f9d4d1d2632c059f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"图6"}})]),a._v(" "),t("h4",{attrs:{id:"_2-调试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-调试"}},[a._v("#")]),a._v(" （2）调试")]),a._v(" "),t("p",[a._v("不同IDE软件的调试方式不同，VSCODE进入调试的方式，点击左侧调试按钮-点击运行与调试-点击python文件\n"),t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/28353153-743b1393df4da717.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"图7"}}),a._v("\n即可进行调试界面，如图8，左侧是变量的变化，顶部是控制台（控制怎么执行代码），代码行黄色高亮为当前执行情况，终端可查看执行输出情况\n"),t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/28353153-185fac5b8c0d8cf6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"图8"}})])])}),[],!1,null,null,null);t.default=_.exports}}]);