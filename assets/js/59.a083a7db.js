(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{499:function(s,a,e){"use strict";e.r(a);var t=e(2),n=Object(t.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h3",{attrs:{id:"一-名词理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-名词理解"}},[s._v("#")]),s._v(" 一，名词理解")]),s._v(" "),a("h4",{attrs:{id:"_1-索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-索引"}},[s._v("#")]),s._v(" 1，索引")]),s._v(" "),a("p",[s._v("在一本书里面，想要去找到某个章节在某页，最快的方法一般是通过目录去找到对应的章节名然后再看页数，这个过程就叫索引。类似的，在某个序列中，也是有类似的方法去快速定位到这个序列中的某个元素，这就是索引的方法")]),s._v(" "),a("h4",{attrs:{id:"_2-切片"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-切片"}},[s._v("#")]),s._v(" 2，切片")]),s._v(" "),a("p",[s._v("切片就可以理解成，不只是去找到某一个元素，而是把这个序列中的很多个元素给一起拿出来。\n####3，序列\n序列的意思可以理解成所存信息成一定顺序的集合，python中标准数据类型里是序列的有："),a("strong",[s._v("字符串、列表、元组")]),s._v("。")]),s._v(" "),a("h3",{attrs:{id:"二-序列索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-序列索引"}},[s._v("#")]),s._v(" 二，序列索引")]),s._v(" "),a("p",[s._v('分正向索引和反向索引，共同存在。正向索引从0开始，依次递增；反向索引从-1开始，依次递减。\n像一个内容为 "Hello 1牛3 Python"的字符串，里面各字符对应索引，用图来表示如下：\n'),a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/28353153-8eec8b3951ed0f42.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"图1"}})]),s._v(" "),a("p",[a("strong",[s._v("实例")]),s._v("：给一个字符串，内容为‘Hello,chick’，输出它的索引为4和-7的内容")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Chic = ‘Hello,chick’\nprint(Chic[4] , Chic[-7])\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("输出")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("o o\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("如上实例所示，想拿出对应序列索引的内容，以**序列名[索引号]**的方式即可，如Chic[4]")]),s._v(" "),a("h3",{attrs:{id:"三-序列切片"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三-序列切片"}},[s._v("#")]),s._v(" 三，序列切片")]),s._v(" "),a("p",[s._v("切片顾名思义就是从原有序列中切出某个片段，是结合索引进行操作的，具体格式如下：")]),s._v(" "),a("blockquote",[a("p",[a("strong",[s._v("起始索引：结束索引：步长")])])]),s._v(" "),a("ul",[a("li",[s._v("逻辑：从起始索引开始（包括），到结束索引为止（不包括），以给定步长拿出元素，如")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Chic = 'Hello,chick'\nprint(Chic[4:6])\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("输出")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("o,\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("起始索引没指定，默认为0（步长为正数），从第一个元素开始；结束索引没指定，默认为序列的长度，如")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Chic = 'Hello,chick'\nprint(Chic[:6])\nprint(Chic[4:])\nprint(Chic[:])\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("输出")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Hello,\no,chick\nHello,chick\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ul",[a("li",[s._v("步长不写，默认为1，可以为负数（此时注意结束索引要在起始索引的左边，正负表示都可），代表按从右到左的顺序去取元素，如")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Chic = 'Hello,chick'\nprint(Chic[-1:0:-2]) #此时步长为-2，所以起始索引为-1（同10），结束索引为0\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("输出")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("kicolH\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"四-索引和切片在数据上的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四-索引和切片在数据上的区别"}},[s._v("#")]),s._v(" 四，索引和切片在数据上的区别")]),s._v(" "),a("p",[s._v("正如名字所定义的，一个是从原序列中取出某个元素，一个是将原序列切几刀得到我们想要的片段，两个的处理方式上有一个特别需要注意的就是："),a("strong",[s._v("索引会降维，切片不会降维")]),s._v("\n如下例：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('list1 = [123, "e", "l", "l", "o", " ,", "C","h", "i", "c", "k"]\nprint(list1[0])\nprint(list1[:1]) \n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("输出")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("123\n[123]\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("可看到索引得到列表里面的一个元素, 123是整数类型；切片得到了列表的一个子列表, 它还是列表类型, 这个列表里面有一个整数类型的元素 123，也就是所谓的"),a("strong",[s._v("索引会降维，切片不会降维")])]),s._v(" "),a("p",[s._v("这句话在后面的多维数组的处理时，是经常需要考虑到的，原理都可以用这句话来表示")]),s._v(" "),a("p",[a("strong",[s._v("涉及数据维度升维介绍")]),s._v("\n标量 -> 向量 -> 矩阵 -> 张量")]),s._v(" "),a("h3",{attrs:{id:"五-涉及内置函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五-涉及内置函数"}},[s._v("#")]),s._v(" 五，涉及内置函数")]),s._v(" "),a("p",[s._v("len(s)")]),s._v(" "),a("ul",[a("li",[s._v("作用：返回传入s的长度（元素个数），s可为序列，也可为集合")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Chic = 'Hello,chick'\nprint(len(Chic))\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("输出")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("11\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])}),[],!1,null,null,null);a.default=n.exports}}]);