(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{507:function(s,n,a){"use strict";a.r(n);var t=a(2),r=Object(t.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h3",{attrs:{id:"一-准备基础"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一-准备基础"}},[s._v("#")]),s._v(" 一， 准备基础")]),s._v(" "),n("p",[s._v("学完python学习系列-培训课的函数之后可做")]),s._v(" "),n("h3",{attrs:{id:"二-题目"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二-题目"}},[s._v("#")]),s._v(" 二， 题目")]),s._v(" "),n("p",[s._v("问题1：请用户输入三个不同的整数，输入时用逗号隔开，判断这三个整数中的最大值（不使用max函数）")]),s._v(" "),n("p",[s._v("问题2：请用户输入一个正整数n，计算并输出该整数[各位整数之积]与[各位整数之和]的差")]),s._v(" "),n("p",[s._v("问题3：请用户输入一个非负整数num，反复将各位上的数字相加，直到结果为一位数，则输出")]),s._v(" "),n("p",[s._v("问题4：定义一个函数，实现移除字符串中的指定索引位置（可指定多个索引）的字符，返回新的字符串")]),s._v(" "),n("h3",{attrs:{id:"三-解析及源代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三-解析及源代码"}},[s._v("#")]),s._v(" 三，解析及源代码")]),s._v(" "),n("h4",{attrs:{id:"问题1"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#问题1"}},[s._v("#")]),s._v(" 问题1：")]),s._v(" "),n("p",[s._v("请用户输入三个不同的整数，输入时用逗号隔开，判断这三个整数中的最大值")]),s._v(" "),n("p",[n("strong",[s._v("分析：")])]),s._v(" "),n("p",[s._v("大概实现流程：先将输入的数分割开，并转化成列表，然后按升序排序，输出索引为-1的值即可")]),s._v(" "),n("p",[n("strong",[s._v("代码实现：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("num = input(\"请输入三个不同的整数，输入时用逗号隔开\")\nlst0 = num.split(',')  #分割开\n\n#分割后保存的都是字符串，要想办法转变成数字类型\nlst1 = []\nfor i in lst0:\n    lst1.append(int(i))\n\nlst1.sort() #排序\nprint(lst1[-1])\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h4",{attrs:{id:"问题2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#问题2"}},[s._v("#")]),s._v(" 问题2：")]),s._v(" "),n("p",[s._v("请用户输入一个正整数n，计算并输出该整数[各位整数之积]与[各位整数之和]的差\n"),n("strong",[s._v("分析：")])]),s._v(" "),n("p",[s._v("大概实现流程：使用for循环遍历输入字符串，通过int函数和+=以及*=操作实现计算积以及和，再计算两者之差")]),s._v(" "),n("p",[n("strong",[s._v("代码实现：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('num = input("请输入一个正整数")\n\nsum0 = 0\nji0 = 1\n\nfor i in num:\n    sum0 += int(i)\n    ji0 *= int(i)\n    \nprint(ji0 - sum0)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h4",{attrs:{id:"问题3"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#问题3"}},[s._v("#")]),s._v(" 问题3：")]),s._v(" "),n("p",[s._v("请用户输入一个非负整数num，反复将各位上的数字相加，直到结果为一位数，则输出")]),s._v(" "),n("p",[n("strong",[s._v("分析：")])]),s._v(" "),n("p",[s._v("1，大概实现流程：使用for循环遍历输入字符串，通过int函数和+=以及*操作实现计算和，若和小于10，则输出，若大于等于10，则继续执行计算和的操作")]),s._v(" "),n("p",[n("strong",[s._v("代码实现：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('num = input("请输入一个非负整数")  \nsum1 = 0  \n  \nfor i in num:  \n    sum1 += int(i)  \n  \nwhile sum1 >= 10:  \n    sum3 = 0  \n    sum2 = str(sum1)  \n    for i in sum2:  \n        sum3 += int(i)  \n    sum1 = sum3  \n  \nelse:  \n    print(sum1)\n\n###函数做法\nnum = input("请输入一个非负整数")\nsum0 = num\n\n  \ndef sum_func(a):\n    a = str(a)\n    sum1 = 0\n    for i in a:\n        sum1 += int(i)\n        return sum1\n\nsum2 = sum_func(sum0)\n\nwhile sum2 >= 10:\n    sum2 = sum_dunc(sum2)\nelse:\n    print(sum2)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br")])]),n("h4",{attrs:{id:"问题4"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#问题4"}},[s._v("#")]),s._v(" 问题4：")]),s._v(" "),n("p",[s._v("定义一个函数，实现移除字符串中的指定索引位置（可指定多个索引）的字符，返回新的字符串")]),s._v(" "),n("p",[n("strong",[s._v("分析：")])]),s._v(" "),n("p",[s._v("因为字符串是不可变的，基本思路是先把字符串变成可变的列表，在列表中移除指定索引，再将剩余的拼接成新的字符串返回。可用*arg接收指定索引")]),s._v(" "),n("p",[n("strong",[s._v("代码实现：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("def str_del(str_old, *index):  \n    indices = range(len(str_old))  \n    str_new = ''  \n  \n    for j in indices:  \n  \n        if j not in index:  \n            str_new += str_old[j]  \n  \n    print(f'新的字符为:{str_new}')  \n  \nstr_del('abcd',2,3)\n\n###如果借用了函数enumerate会更快\n###enumerate作用：返回一个可迭代对象，有元组组成，元组里面第一个是索引，第二个是具体元素\n###print(list(enumerate('str_old')))输出为[(0, 's'), (1, 't'), (2, 'r'), (3, '_'), (4, 'o'), (5, 'l'), (6, 'd')]\n\ndef str_del(str_old, *index):  \n    str_new = ''  \n    for i,j in enumerate(str_old):  \n        if i not in index:\n            str_new += j\n\n    print(f'新的字符为:{str_new}')  \n  \nstr_del('abcd',2,3)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br")])])])}),[],!1,null,null,null);n.default=r.exports}}]);